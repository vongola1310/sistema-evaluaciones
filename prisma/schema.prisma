// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User{
  id        String   @id @default(cuid()) // ID como String
  name      String?
  email     String   @unique
  password  String
  role      String   @default("evaluador")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  
  // Relación con Evaluation como evaluador
  evaluations Evaluation[] @relation(name: "Evaluator")
  
   
}

model Employee{
  id         Int @id @default(autoincrement())
  firstName  String
  lastName   String
  employeeNo String @unique
  role String @default("evaluado")//

  evaluations Evaluation[]
}

model Evaluation {
  id              Int      @id @default(autoincrement())
  
  // Claves foráneas
  employeeId      Int
  evaluatorId     String   // Ahora compatible con User.id (String)
  opportunityId   Int
  
  // Relaciones con nombres explícitos
  employee      Employee    @relation(fields: [employeeId], references: [id])
  evaluator     User        @relation(name: "Evaluator", fields: [evaluatorId], references: [id])
  opportunity   Opportunity @relation(fields: [opportunityId], references: [id])
  
  // Campos de evaluación
  updatedDate       String
  correctPriceQty   String
  quoteUploaded     String
  description       String
  recentFollowUp    String
  correctStage      String
  realisticChance   String
  nextStepsDefined  String
  contactAssigned   String
  commentsUpdated   String
  
  // Nuevos Cálculos
  scoreRaw       Int
  totalPreguntas Int    @default(10)
  totalPosibles  Int    @default(20)
  trimestre      Int    @default(1)
  year           Int    @default(2025)
  rubrica        String @default("Sin evaluar")
  
  // Metadata
  createdAt         DateTime @default(now())
}

model Evaluator{
  id                Int @id @default(autoincrement())
  fullName          String
  email             String @unique

  
}

model Opportunity {
  id      Int @id @default(autoincrement())
  number  String @unique// numero de oportunidad
  name    String // Nombre libre

  evaluations Evaluation[]
}

