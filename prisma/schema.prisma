// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User{
  id        String @id @default(cuid())
  name      String?
  email     String @unique
  password  String
  role String @default("evaluador")//
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt

  evaluations Evaluation[] // ‚Üê Si luego quieres relacionarlo con evaluaciones

   
}

model Employee{
  id         Int @id @default(autoincrement())
  firstName  String
  lastName   String
  employeeNo String @unique
  role String @default("evaluado")//

  evaluations Evaluation[]
}

model Evaluation {
  id              Int @id @default(autoincrement())

  //claves foraneas
  employeeId      Int
  evaluatorId     Int
  opportunityId   Int
  //Relaciones
  employee    Employee @relation(fields: [employeeId],references: [id])
 
  evaluator   Evaluator @relation(fields: [evaluatorId],references: [id])
 
  opportunity Opportunity @relation(fields: [opportunityId], references: [id])
  
  


  //Campos de evaluacion (0-2)

  updatedDate       String
  correctPriceQty   String
  quoteUploaded     String
  description       String
  recentFollowUp    String
  correctStage      String
  realisticChance   String
  nextStepsDefined  String
  contactAssigned   String
  commentsUpdated   String

  //Calculo 
  scoreRaw          Int
  scoreAverage      Float
  
  // Meta
  createdAt         DateTime @default(now())

  User User[]
}

model Evaluator{
  id                Int @id @default(autoincrement())
  fullName          String
  email             String @unique

  evaluations Evaluation[]
}

model Opportunity {
  id      Int @id @default(autoincrement())
  number  String @unique// numero de oportunidad
  name    String // Nombre libre

  evaluations Evaluation[]
}

